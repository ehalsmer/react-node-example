{"version":3,"sources":["Store.js","Dashboard.js","Profile.js","Signin.js","App.js","index.js"],"names":["socket","Context","createContext","initialState","general","from","message","channel","questions","off_topic","reducer","state","action","payload","type","sendMessageAction","value","emit","user","Math","random","toFixed","Store","props","useReducer","allMessages","dispatch","io","on","Provider","children","useStyles","makeStyles","theme","root","margin","padding","spacing","flex","display","alignItems","channelsWindow","width","height","borderRight","chatWindow","chatBox","chatButton","chip","Dashboard","useContext","channels","Object","keys","useState","activeChannel","setActiveChannel","textValue","setTextValue","classes","Paper","className","Typography","variant","component","List","map","ListItem","onClick","e","target","innerText","key","button","ListItemText","primary","chat","i","Chip","size","label","TextField","onChange","Button","color","avatarFallbackImage","Profile","person","name","avatarUrl","this","handleSignOut","userSession","isSignInPending","id","src","alt","bind","setState","Person","loadUserData","profile","Component","Signin","handleSignIn","App","appConfig","AppConfig","UserSession","redirectPath","console","log","isUserSignedIn","userData","setUserData","useEffect","handlePendingSignIn","then","data","window","history","replaceState","document","title","toString","preventDefault","signUserOut","location","origin","redirectToSignIn","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.645439c6.chunk.js","sourcesContent":["import React, {createContext, useReducer} from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nexport const Context = createContext();\r\n\r\nconst initialState = {\r\n    general: [\r\n        {from: \"ehalsmer\", message: \"Hello!\", channel: \"general\"},\r\n        {from: \"lonavarro\", message: \"asdf\", channel: \"general\"},\r\n        {from: \"anmoore\", message: \"Test test test!\", channel: \"general\"}\r\n    ],\r\n    questions: [\r\n        {from: \"ehalsmer\", message: \";oij3rn34n142,r v wer l342\", channel: \"questions\"},\r\n        {from: \"user982\", message: \"What?\", channel: \"questions\"},\r\n        {from: \"pumpkin\", message: \"Hi everyone\", channel: \"questions\"},\r\n        {from: \"ehalsmer\", message: \"Stuff and things\", channel: \"questions\"}\r\n    ],\r\n    off_topic: [\r\n        {from: \"anmoore\", message: \"24kj4hlknsd !\", channel: \"off_topic\"},\r\n        {from: \"lonavarro\", message: \"What lovely weather we're having\", channel: \"off_topic\"},\r\n        {from: \"anmoore\", message: \"...\", channel: \"off_topic\"}\r\n    ]\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    const {from, message, channel} = action.payload // destructuring \r\n    switch(action.type){\r\n        case \"RECEIVE_MESSAGE\":\r\n            return {\r\n                ...state,\r\n                [channel]: [\r\n                    ...state[channel], {from, message, channel}\r\n                ]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n// socket declared outside of Store component so it doesn't rerender every time the Store reloads\r\nlet socket;\r\n\r\nconst sendMessageAction = (value) => {\r\n    socket.emit('chat message', value)\r\n}\r\nconst user = 'user' + (Math.random()*100).toFixed(0);\r\n\r\n\r\nconst Store = (props) => {\r\n    const [allMessages, dispatch] = useReducer(reducer, initialState)\r\n\r\n    if (!socket){\r\n        // console.log('attempting to connect from client')\r\n        socket = io();\r\n        socket.on('chat message', (message)=>{\r\n            // console.log('message received from server: ', message)\r\n            dispatch({type: \"RECEIVE_MESSAGE\", payload: message})\r\n        })\r\n    }\r\n    \r\n\r\n    return (\r\n        // sending {allMessages as an object}\r\n        <Context.Provider value={{allMessages, sendMessageAction, user}}>\r\n            {props.children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default Store;","import React, {useState, useContext} from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// import Avatar from '@material-ui/core/Avatar';\r\nimport Chip from \"@material-ui/core/Chip\";\r\n// import FaceIcon from '@material-ui/icons/Face';\r\n\r\nimport {Context} from \"./Store.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: \"50px\",\r\n    padding: theme.spacing(3, 2)\r\n  },\r\n  flex: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  channelsWindow: {\r\n    width: \"30%\",\r\n    height: \"300px\",\r\n    borderRight: \"1px solid grey\"\r\n  },\r\n  chatWindow: {\r\n    width: \"70%\",\r\n    height: \"300px\",\r\n    padding: \"20px\"\r\n  },\r\n  chatBox: {\r\n    width: \"85%\"\r\n  },\r\n  chatButton: {\r\n    width: \"15%\"\r\n  },\r\n  chip: {\r\n    margin: \"4px\"\r\n  }\r\n}));\r\n\r\nconst Dashboard = () => {\r\n// Context store\r\n  const {allMessages, sendMessageAction, user} = useContext(Context);\r\n//   console.log('allMessages from Context: ', allMessages)\r\n  const channels = Object.keys(allMessages);\r\n//   console.log('Channels list: ', channels)\r\n\r\n// local state\r\n  const [activeChannel, setActiveChannel] = useState(channels[0])\r\n  const [textValue, setTextValue] = useState('')\r\n\r\n//   console.log('textValue: ',textValue)\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Typography variant=\"h4\" component=\"h4\">\r\n        Blockchat\r\n      </Typography>\r\n      <Typography variant=\"h5\" component=\"h5\">\r\n        {activeChannel}\r\n      </Typography>\r\n      <div className={classes.flex}>\r\n        <div className={classes.channelsWindow}>\r\n          <List>\r\n            {channels.map(channel => \r\n                <ListItem onClick={e => setActiveChannel(e.target.innerText)} key={channel} button>\r\n                    <ListItemText primary={channel} />\r\n                </ListItem>\r\n            )}\r\n          </List>\r\n        </div>\r\n        <div className={classes.chatWindow}>\r\n            {\r\n                allMessages[activeChannel].map((chat, i) =>\r\n                    <div className={classes.flex} key={i}>\r\n                        <Chip size=\"small\" label={chat.from} className={classes.chip}/>\r\n                        <Typography variant='body1'>{chat.message}</Typography>\r\n                    </div>)\r\n            }\r\n        </div>\r\n      </div>\r\n      <div className={classes.flex}>\r\n      <TextField\r\n        // variant=\"outlined\" \r\n        margin=\"normal\" \r\n        label=\"Type message here\"\r\n        className={classes.chatBox}\r\n        value={textValue}\r\n        onChange={e => setTextValue(e.target.value)}\r\n        />\r\n      <Button \r\n        type=\"submit\"\r\n        variant=\"contained\" \r\n        color=\"primary\" \r\n        className={classes.button}\r\n        onClick={()=> {\r\n            sendMessageAction({from: user, message: textValue, channel: activeChannel});\r\n            setTextValue('')\r\n            }\r\n        }\r\n        >\r\n        Send\r\n      </Button>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Person,\r\n} from 'blockstack';\r\n\r\nconst avatarFallbackImage = 'https://s3.amazonaws.com/onename/avatar-placeholder.png';\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n  \tsuper(props);\r\n\r\n  \tthis.state = {\r\n  \t  person: {\r\n  \t  \tname() {\r\n          return 'Anonymous';\r\n        },\r\n  \t  \tavatarUrl() {\r\n  \t  \t  return avatarFallbackImage;\r\n  \t  \t},\r\n  \t  },\r\n  \t};\r\n  }\r\n\r\n  render() {\r\n    const { handleSignOut, userSession } = this.props;\r\n    const { person } = this.state;\r\n    return (\r\n      !userSession.isSignInPending() ?\r\n      <div className=\"panel-welcome\" id=\"section-2\">\r\n        <div className=\"avatar-section\">\r\n          <img src={ person.avatarUrl() ? person.avatarUrl() : avatarFallbackImage } className=\"img-rounded avatar\" id=\"avatar-image\" alt=\"\"/>\r\n        </div>\r\n        <h1>Hello, <span id=\"heading-name\">{ person.name() ? person.name() : 'Nameless Person' }</span>!</h1>\r\n        <p className=\"lead\">\r\n          <button\r\n            className=\"btn btn-primary btn-lg\"\r\n            id=\"signout-button\"\r\n            onClick={ handleSignOut.bind(this) }\r\n          >\r\n            Logout\r\n          </button>\r\n        </p>\r\n      </div> : null\r\n    );\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { userSession } = this.props;\r\n    this.setState({\r\n      person: new Person(userSession.loadUserData().profile),\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Signin extends Component {\r\n\r\n  render() {\r\n    const { handleSignIn } = this.props;\r\n\r\n    return (\r\n      <div className=\"panel-landing\" id=\"section-1\">\r\n        <h1 className=\"landing-heading\">Hello, Blockstack!</h1>\r\n        <p className=\"lead\">\r\n          <button\r\n            className=\"btn btn-primary btn-lg\"\r\n            id=\"signin-button\"\r\n            onClick={ handleSignIn.bind(this) }\r\n          >\r\n            Sign In with Blockstack\r\n          </button>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./Dashboard\";\nimport Profile from \"./Profile.js\";\nimport Store from \"./Store.js\";\nimport Signin from \"./Signin.js\";\nimport { UserSession, AppConfig } from \"blockstack\";\n\n// blockstack:\n\nfunction App() {\n  const appConfig = new AppConfig();\n  const userSession = new UserSession({\n    appConfig: appConfig,\n    redirectPath: \"https://react-node-eg.herokuapp.com/\"\n  });\n\n  console.log(\"userSession\", userSession);\n  console.log(\"isLoggedIn()\", userSession.isUserSignedIn());\n\n  const [userData, setUserData] = useState();\n\n  useEffect(() => {\n    if (userSession.isSignInPending()) {\n      userSession.handlePendingSignIn().then(data => {\n        window.history.replaceState({}, document.title, \"/\");\n        setUserData(data);\n      });\n    }\n  }, [userData]);\n\n  const handleSignIn = e => {\n    e.preventDefault();\n    userSession.redirectToSignIn();\n  };\n\n  const handleSignOut = e => {\n    e.preventDefault();\n    userSession.signUserOut(window.location.origin);\n  };\n  return (\n      <Store>\n    <div className=\"App\">\n      <div>Signed in: {userSession.isUserSignedIn().toString()}</div>\n      {!userSession.isUserSignedIn() ? (\n        <Signin userSession={userSession} handleSignIn={handleSignIn} />\n      ) : (\n        <>\n          <Profile userSession={userSession} handleSignOut={handleSignOut} />\n            <Dashboard />\n        </>\n      )}\n    </div>\n          </Store>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}